{"version":3,"sources":["components/Header.js","components/Landing.js","components/Search.js","components/Weather.js","components/Yelp.js","components/Movies.js","components/Events.js","components/Hiking.js","components/Content.js","components/Map.js","components/Results.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","view","react_default","a","createElement","react","Component","Landing","formSubmit","handleSubmit","urlInput","updateUrlInput","e","setState","target","value","cityInput","handleCityInput","onChange","onClick","Search","handleInput","input","preventDefault","locationSubmit","Weather","data","forecast","time","_this2","console","log","locationData","superagent","get","concat","url","query","then","results","body","prevProps","_this3","class","map","el","i","key","Yelp","className","Math","random","href","name","rating","price","src","image_url","Movies","title","released_on","total_votes","average_votes","popularity","overview","Events","Hiking","trail_url","location","length","condition_date","condition_time","conditions","stars","star_votes","summary","Content","components_Weather","components_Yelp","components_Events","components_Movies","components_Hiking","Map","defineProperty","id","alt","width","height","formatted_query","frameBorder","scrolling","marginHeight","marginWidth","Results","search_query","latitude","longitude","created_at","components_Search","components_Map","components_Content","App","toggleView","components_Header","components_Landing","components_Results","Boolean","window","hostname","match","require","config","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ef613e6.chunk.js","sourcesContent":["import React, { Component, Fragment }from 'react';\nimport '../App.css';\n\n\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      view: 'landing'\n    }\n\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <h1>City Explorer</h1>\n        <p>Enter a location below to learn about the weather, events, restaurants, movies filmed there, and more!</p>\n      </Fragment>\n    );\n  }\n  \n}\n\nexport default Header;","import React, { Component, Fragment }from 'react';\nimport '../App.css';\n\n\nclass Landing extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      urlInput: '',\n      cityInput: ''\n    }\n\n  }\n  formSubmit = ()=>{\n    this.props.handleSubmit(this.state.urlInput);\n  }\n  updateUrlInput = (e)=>{\n    this.setState({urlInput: e.target.value,cityInput: this.state.cityInput})\n  }\n  handleCityInput = (e)=>{\n    this.setState({cityInput: e.target.value,urlInput: this.state.urlInput})\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <p>Enter the URL to your deployed back end, making sure to remove the trailing forward slash</p>\n        <input onChange={this.updateUrlInput}></input>\n        <button onClick={this.formSubmit}>Click Me</button>\n      </Fragment>\n    );\n  }\n  \n}\n\nexport default Landing;","import React, { Component, Fragment }from 'react';\nimport '../App.css';\n\nclass Search extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        input: ''\n      }\n      \n    }\n  \n    handleInput = (e)=>{\n      this.setState({input: e.target.value})\n      \n    }\n    handleSubmit = (e) =>{\n      e.preventDefault();\n      this.props.locationSubmit(this.state.input);\n      this.setState({input: ''});\n    }\n  \n    render(){\n      return (\n        <Fragment>\n          <p>Search For Location</p>\n          <input onChange={this.handleInput} value={this.state.input}></input>\n          <button onClick={this.handleSubmit}>Explore</button>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Search;","import React, { Component, Fragment }from 'react';\n\nimport superagent from 'superagent';\nimport '../App.css';\n\n\nclass Weather extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        data: [\n          {\n            \"forecast\": \"Partly cloudy until afternoon.\",\n            \"time\": \"Mon Jan 01 2001\"\n          },\n          {\n            \"forecast\": \"Mostly cloudy in the morning.\",\n            \"time\": \"Tue Jan 02 2001\"\n          },\n        ]\n      }\n      \n    }\n  componentDidMount(){\n    console.log(this.props.locationData)\n    superagent.get(`${this.props.url}/weather`)\n    .query({data: this.props.locationData})\n    .then(results =>{\n      console.log(results.body);\n      this.setState({data: results.body})\n    })\n  }\n  componentDidUpdate(prevProps){\n    console.log(this.props.locationData)\n    console.log('weather is changing')\n    if(this.props.locationData !== prevProps.locationData){\n      superagent.get(`${this.props.url}/weather`)\n      .query({data: this.props.locationData})\n    .then(results =>{\n      console.log(results.body);\n      this.setState({data: results.body})\n    })\n    }\n  }\n    \n  \n    render(){\n      return (\n        <Fragment>\n            \n          <section>\n        <h3>Results from the Dark Sky API</h3>\n        <ul class=\"weather-results\">\n            {this.state.data.map((el,i)=>{\n              return (\n                \n                    <li key={i}>The forecast for {el.time} is: {el.forecast}</li>\n                  \n              )\n            })}\n            </ul>\n          </section>\n              \n          \n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Weather;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport '../App.css';\n\nclass Yelp extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        data: ['default']\n      }\n      \n    }\n    componentDidMount(){\n      console.log(this.props.locationData)\n      superagent.get(`${this.props.url}/yelp`)\n      .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n    }\n    componentDidUpdate(prevProps){\n      console.log(this.props.locationData)\n      console.log('yelp is changing')\n      if(this.props.locationData !== prevProps.locationData){\n        superagent.get(`${this.props.url}/yelp`)\n        .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n            <section className=\"yelp-container\">\n        <h3>Results from the Yelp API</h3>\n        <ul className=\"yelp-results\">\n        \n      \n            {this.state.data.map(el=>{\n             return (\n              <li key={Math.random()}>\n              <a href={el.url}>{el.name}</a>\n      <p>The average rating is {el.rating} out of 5 and the average cost is {el.price} out of 4</p>\n      <img src={el.image_url}></img>\n              </li>\n             )\n           })} \n          </ul>\n          </section>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Yelp;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport '../App.css';\n\nclass Movies extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        data: ['default']\n      }\n      \n    }\n    componentDidMount(){\n      console.log(this.props.locationData)\n      superagent.get(`${this.props.url}/movies`)\n      .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n    }\n    componentDidUpdate(prevProps){\n      console.log(this.props.locationData)\n      console.log('movies is changing')\n      console.log(this.props.url)\n      if(this.props.locationData !== prevProps.locationData){\n        superagent.get(`${this.props.url}/movies`)\n        .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n          <section className=\"movie-container\">\n        <h3>Results from The Movie DB API</h3>\n        <ul className=\"movies-results\">\n      \n           {this.state.data.map(el=>{\n             return (\n              <li key={Math.random()}>\n              <p><span>{el.title}</span> was relased on {el.released_on}. Out of {el.total_votes} total votes, {el.title} has an average vote of {el.average_votes} and a popularity score of {el.popularity}.</p>\n              <img src={el.image_url}/>\n              <p>{el.overview}</p>\n              </li>\n             )\n           })} \n            </ul>\n          </section>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Movies;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport '../App.css';\n\nclass Events extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        data: ['default']\n      }\n      \n    }\n    componentDidMount(){\n      console.log(this.props.locationData)\n      superagent.get(`${this.props.url}/events`)\n      .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n    }\n    componentDidUpdate(prevProps){\n      console.log(this.props.locationData)\n      console.log('events is changing')\n      if(this.props.locationData !== prevProps.locationData){\n        superagent.get(`${this.props.url}/events`)\n        .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n            <section>\n        <h3>Results from the Eventbrite API</h3>\n        <ul className=\"events-results\">\n      \n            {this.state.data.map(el=>{\n             return (\n              <li key={Math.random()}>\n              <a href={el.url}>{el.name}</a>\n      <p>The average rating is {el.rating} out of 5 and the average cost is {el.price} out of 4</p>\n      <img src={el.image_url}></img>\n              </li>\n             )\n           })} \n            </ul>\n          </section>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Events;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport '../App.css';\n\nclass Hiking extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        data: ['default']\n      }\n      \n    }\n    componentDidMount(){\n      console.log(this.props.locationData)\n      superagent.get(`${this.props.url}/trails`)\n      .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n    }\n    componentDidUpdate(prevProps){\n      console.log(this.props.locationData)\n      console.log('yelp is changing')\n      if(this.props.locationData !== prevProps.locationData){\n        superagent.get(`${this.props.url}/trails`)\n        .query({data: this.props.locationData})\n      .then(results =>{\n        console.log(results.body);\n        this.setState({data: results.body})\n      })\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n          <section>\n        <h3>Results from the Hiking Project API</h3>\n        <ul className=\"trails-results\">\n      \n            {this.state.data.map(el=>{\n              return (\n                <div key={Math.random()}>\n                <p>Hike Name: <a href={el.trail_url}>{el.name}</a>, Location: {el.location}, Distance: {el.length} miles</p>\n      <p>On {el.condition_date} at {el.condition_time}, trail conditions were reported as: {el.conditions}</p>\n      <p>This trail has a rating of {el.stars} stars (out of {el.star_votes} votes)</p>\n      <p>{el.summary}</p>\n      </div>\n              )\n            })}\n            </ul>\n            </section>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Hiking;","import React, { Component, Fragment }from 'react';\n\nimport Weather from './Weather.js';\nimport Yelp from './Yelp.js';\nimport Movies from './Movies.js';\nimport Events from './Events.js';\nimport Hiking from './Hiking.js';\nimport '../App.css';\n\nclass Content extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        \n      }\n      \n    }\n    componentDidMount(){\n      this.setState(this.props.locationData)\n    }\n    componentDidUpdate(prevProps){\n      if(this.props.locationData !== prevProps.locationData){\n        console.log('your props are changing go get new data', this.props.locationData)\n        this.setState(this.props.locationData)\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n          <div className=\"column-container\">\n          <Weather  url={this.props.url} locationData={this.state}/>\n          <Yelp url={this.props.url} locationData={this.state}/>\n          <Events url={this.props.url} locationData={this.state}/>\n          <Movies url={this.props.url} locationData={this.state}/>\n          <Hiking url={this.props.url} locationData={this.state}/>\n          </div>  \n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Content;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport SimpleMap from './GoogleMap';\nimport '../App.css';\n\n\n\nclass Map extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        \n      }\n      \n    }\n    componentDidMount(){\n      this.setState(this.props.locationData)\n      console.log('go and get a map for',this.props.locationData)\n    }\n    componentDidUpdate(prevProps){\n      if(this.props.locationData !== prevProps.locationData){\n        console.log('your props are changing, go and get a new map', this.props.locationData)\n        this.setState(this.props.locationData)\n      }\n    }\n    \n  \n    render(){\n      return (\n        <Fragment>\n          <div id=\"map\" className=\"hide\" src=\"\" alt=\"Map of search query\" className=\"mapouter\"><div className=\"gmap_canvas\"><iframe width=\"600\" height=\"500\" id=\"gmap_canvas\" src={`https://maps.google.com/maps?q=${this.state.formatted_query}&t=&z=13&ie=UTF8&iwloc=&output=embed`} frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\"></iframe><a href=\"https://www.pureblack.de\"></a></div></div>\n          {/* <SimpleMap data={this.state}/> */}\n        </Fragment>\n      );\n    }\n    \n  }\n  \n  export default Map;","import React, { Component, Fragment }from 'react';\nimport superagent from 'superagent';\nimport '../App.css';\nimport Search from './Search.js'\nimport Content from './Content.js';\nimport Map from './Map.js'\n\n\nclass Results extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      id:1,\n      search_query:'',\n      formatted_query:'',\n      latitude:'',\n      longitude:'',\n      created_at:null\n    }\n    \n  }\n  \n\n  \n  handleSubmit = (location) =>{\n    console.log('going to get data for', location);\n    superagent.get(`${this.props.url}/location?data=${location}`)\n      .then(results =>{\n        console.log(results.body)\n        this.setState(results.body)\n\n      })\n  }\n\n  render(){\n    if(this.state.search_query === ''){\n      return (\n        <Fragment>\n          <Search locationSubmit={this.handleSubmit}/>\n        </Fragment>\n      );\n    }else{\n      return (\n        <Fragment>\n          <Search locationSubmit={this.handleSubmit}/>\n          <p>{this.state.location}</p>\n          <Map locationData={this.state}/>\n          <Content url={this.props.url} locationData={this.state}/>\n        </Fragment>\n      );\n    }\n    \n  }\n  \n}\n\nexport default Results;","import React, { Component, Fragment }from 'react';\nimport './App.css';\n\nimport Header from './components/Header.js';\nimport Landing from './components/Landing.js';\nimport Results from './components/Results.js';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      view: 'landing',\n      url: ''\n\n    }\n\n  }\n  toggleView = (url) => {\n    console.log('app clickity', url);\n    this.setState({view: 'results',url: url})\n  }\n\n  render(){\n        if(this.state.view==='landing'){\n          return (\n            <Fragment>\n              <Header/>\n              <Landing handleSubmit={this.toggleView}/>\n            </Fragment>\n          )\n        }else{\n          return (\n            <Fragment>\n              <Header/>\n              <Results url={this.state.url}/>\n            </Fragment>\n          )\n        }\n      \n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config()\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}